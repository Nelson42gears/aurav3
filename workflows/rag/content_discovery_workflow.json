[
  {
    "name": "42Gears Content Discovery & Auto-Update",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "cronExpression",
                "value": "0 2 * * *"
              }
            ]
          }
        },
        "id": "schedule-trigger",
        "name": "Daily Content Check",
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.1,
        "position": [240, 300]
      },
      {
        "parameters": {
          "url": "https://knowledgebase.42gears.com",
          "options": {
            "timeout": 30000
          }
        },
        "id": "http-kb-check",
        "name": "Check Knowledgebase",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [460, 200]
      },
      {
        "parameters": {
          "url": "https://docs.42gears.com",
          "options": {
            "timeout": 30000
          }
        },
        "id": "http-docs-check",
        "name": "Check Documentation",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [460, 400]
      },
      {
        "parameters": {
          "jsCode": "// Extract and hash page content to detect changes\nconst crypto = require('crypto');\n\nconst items = [];\n\nfor (const item of $input.all()) {\n  const url = item.json.url || '';\n  const content = item.json.data || item.json.body || '';\n  \n  // Create content hash\n  const contentHash = crypto.createHash('sha256')\n    .update(content.toString())\n    .digest('hex');\n  \n  // Extract basic info\n  const sourceType = url.includes('knowledgebase') ? 'knowledgebase' : 'docs';\n  \n  items.push({\n    url: url,\n    source: sourceType,\n    content_hash: contentHash,\n    content_length: content.length,\n    timestamp: new Date().toISOString(),\n    needs_processing: true // Will be determined by comparing with stored hashes\n  });\n}\n\nreturn items;"
        },
        "id": "content-analyzer",
        "name": "Analyze Content Changes",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [680, 300]
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict"
            },
            "conditions": [
              {
                "id": "change-detected",
                "leftValue": "={{ $json.needs_processing }}",
                "rightValue": true,
                "operator": {
                  "type": "boolean",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          }
        },
        "id": "if-changes",
        "name": "If Changes Detected",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2,
        "position": [900, 300]
      },
      {
        "parameters": {
          "command": "cd /home/nelson/nebula/Aura && source .venv/bin/activate && python services/intelligence/rag/unified_extractor.py --incremental",
          "options": {
            "timeout": 3600
          }
        },
        "id": "run-extraction",
        "name": "Run Incremental Extraction",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [1120, 200]
      },
      {
        "parameters": {
          "url": "http://localhost:8001/api/v1/collections/42gears-unified-v1/count",
          "options": {
            "timeout": 10000
          }
        },
        "id": "verify-indexing",
        "name": "Verify ChromaDB Update",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [1340, 200]
      },
      {
        "parameters": {
          "jsCode": "// Generate update report\nconst items = [];\n\nfor (const item of $input.all()) {\n  const report = {\n    update_timestamp: new Date().toISOString(),\n    extraction_status: item.json.exitCode === 0 ? 'success' : 'failed',\n    chromadb_count: item.json.count || 0,\n    sources_processed: ['knowledgebase.42gears.com', 'docs.42gears.com'],\n    next_check: new Date(Date.now() + 24*60*60*1000).toISOString()\n  };\n  \n  items.push(report);\n}\n\nreturn items;"
        },
        "id": "generate-report",
        "name": "Generate Update Report",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [1560, 200]
      },
      {
        "parameters": {
          "operation": "write",
          "fileName": "/home/nelson/nebula/Aura/logs/content_auto_update.json",
          "options": {
            "encoding": "utf8"
          }
        },
        "id": "save-report",
        "name": "Save Update Report",
        "type": "n8n-nodes-base.readWriteFile",
        "typeVersion": 1,
        "position": [1780, 200]
      }
    ],
    "connections": {
      "Daily Content Check": {
        "main": [
          [
            {
              "node": "Check Knowledgebase",
              "type": "main",
              "index": 0
            },
            {
              "node": "Check Documentation", 
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check Knowledgebase": {
        "main": [
          [
            {
              "node": "Analyze Content Changes",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check Documentation": {
        "main": [
          [
            {
              "node": "Analyze Content Changes",
              "type": "main", 
              "index": 0
            }
          ]
        ]
      },
      "Analyze Content Changes": {
        "main": [
          [
            {
              "node": "If Changes Detected",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If Changes Detected": {
        "main": [
          [
            {
              "node": "Run Incremental Extraction",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Run Incremental Extraction": {
        "main": [
          [
            {
              "node": "Verify ChromaDB Update",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Verify ChromaDB Update": {
        "main": [
          [
            {
              "node": "Generate Update Report",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Generate Update Report": {
        "main": [
          [
            {
              "node": "Save Update Report",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "settings": {
      "executionOrder": "v1",
      "saveManualExecutions": true,
      "callerPolicy": "workflowsFromSameOwner",
      "errorWorkflow": ""
    },
    "staticData": null,
    "tags": [],
    "triggerCount": 1,
    "updatedAt": "2025-08-18T06:15:00.000Z",
    "versionId": "1"
  }
]
