[
  {
    "name": "Freshdesk MCP Ticket Monitor",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "minutes",
                "minutesInterval": 5
              }
            ]
          }
        },
        "id": "schedule-trigger",
        "name": "Every 5 minutes",
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.2,
        "position": [200, 300]
      },
      {
        "parameters": {
          "method": "GET",
          "url": "http://localhost:8000/api/tickets",
          "options": {}
        },
        "id": "get-tickets",
        "name": "Get Freshdesk Tickets",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [400, 300]
      },
      {
        "parameters": {
          "jsCode": "// Filter new tickets created in last 5 minutes\nconst now = new Date();\nconst fiveMinutesAgo = new Date(now.getTime() - 5 * 60 * 1000);\n\nconst newTickets = $input.all().filter(ticket => {\n  const createdAt = new Date(ticket.json.created_at);\n  return createdAt > fiveMinutesAgo;\n});\n\nif (newTickets.length === 0) {\n  // No new tickets, return empty to stop workflow\n  return [];\n}\n\n// Process each new ticket\nreturn newTickets.map(ticket => ({\n  json: {\n    ticket_id: ticket.json.id,\n    subject: ticket.json.subject,\n    description: ticket.json.description_text || ticket.json.description,\n    requester_email: ticket.json.requester?.email || 'unknown@example.com',\n    created_at: ticket.json.created_at\n  }\n}));"
        },
        "id": "filter-new-tickets",
        "name": "Filter New Tickets",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [620, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://0drzjvpz3v4fzy-8000.proxy.runpod.net/v1/chat/completions",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "sendBody": true,
          "bodyContentType": "json",
          "jsonBody": "{\n  \"model\": \"qwen\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a professional support agent. Write a helpful, concise response draft for this customer inquiry. Keep it under 200 words and be friendly but professional.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Subject: {{ $json.subject }}\\n\\nCustomer Query: {{ $json.description }}\"\n    }\n  ],\n  \"temperature\": 0.3,\n  \"max_tokens\": 300,\n  \"stop\": [\"\\n\\nThinking:\", \"<thinking>\", \"</thinking>\"]\n}",
          "options": {}
        },
        "id": "qwen-ai-response",
        "name": "Generate AI Response",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [840, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://localhost:8000/api/freshdesk/tickets/{{ $('Filter New Tickets').item.json.ticket_id }}/notes",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "sendBody": true,
          "bodyContentType": "json",
          "jsonBody": "{\n  \"body\": \"ðŸ¤– **AI Draft Response:**\\n\\n{{ $('Generate AI Response').item.json.choices[0].message.content }}\\n\\n---\\n*This is an AI-generated draft. Please review and edit before sending to the customer.*\",\n  \"private\": true,\n  \"user_id\": 1\n}",
          "options": {}
        },
        "id": "post-ai-note",
        "name": "Post AI Note to Freshdesk",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [1060, 300]
      }
    ],
    "connections": {
      "Every 5 minutes": {
        "main": [
          [
            {
              "node": "Get Freshdesk Tickets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Freshdesk Tickets": {
        "main": [
          [
            {
              "node": "Filter New Tickets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Filter New Tickets": {
        "main": [
          [
            {
              "node": "Generate AI Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Generate AI Response": {
        "main": [
          [
            {
              "node": "Post AI Note to Freshdesk",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "tags": [],
    "triggerCount": 1,
    "updatedAt": "2025-08-13T11:22:27.000Z",
    "versionId": "1"
  }
]
