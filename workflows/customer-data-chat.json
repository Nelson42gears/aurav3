[{"createdAt":"2025-08-18T09:33:08.468Z","updatedAt":"2025-08-18T10:34:19.871Z","id":"cQ8Pe3FAiNJIEIoo","name":"Customer Data Chat - Fixed","active":true,"isArchived":false,"nodes":[{"parameters":{"path":"customer-chat","httpMethod":"POST","options":{}},"id":"webhook-trigger","name":"Webhook Trigger","type":"n8n-nodes-base.webhook","typeVersion":1.2,"position":[240,300],"notes":" Standard webhook: POST /webhook/customer-chat\nAccepts: { \"chatInput\": \"Get data for customer john@example.com\", \"enabled_servers\": [\"freshdesk\", \"intercom\"] }"},{"parameters":{"method":"POST","url":"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent","authentication":"none","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"x-goog-api-key","value":"={{ $env.GEMINI_API_KEY }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"You are a query analysis expert. Your task is to analyze the user's query and extract key information into a structured JSON format. Return ONLY the JSON object.\\n\\nFollow these rules:\\n1.  **action**: Determine if the query is for 'freshdesk', 'intercom', or 'general' if unsure.\\n2.  **customer_id**: Extract the customer's email or name. If none is found, return 'unknown'.\\n3.  **intent**: Classify the intent as 'get_data', 'get_report', or 'check_sentiment'. Default to 'get_data'.\\n\\n**Example:**\\nQuery: Can you pull the latest support tickets for customer@example.com from Freshdesk?\\nResponse:\\n{\\\"action\\\": \\\"freshdesk\\\", \\\"customer_id\\\": \\\"customer@example.com\\\", \\\"intent\\\": \\\"get_data\\\"}\\n\\n**User Query:**\\nQuery: {{ $json.chatInput }}\\nResponse:\\n\"\n    }]\n  }],\n  \"generationConfig\": {\n    \"temperature\": 0.1,\n    \"maxOutputTokens\": 250,\n    \"response_mime_type\": \"application/json\"\n  }\n}","options":{}},"id":"gemini-analyzer","name":"Gemini Query Analyzer","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[460,300],"notes":" Standard HTTP Request to Gemini API"},{"parameters":{"jsCode":"// Parse Gemini response\nconst geminiText = $json.candidates?.[0]?.content?.parts?.[0]?.text || '{}';\nconst jsonMatch = geminiText.match(/\\{[\\s\\S]*\\}/);\n\nlet analysis = {};\ntry {\n  analysis = jsonMatch ? JSON.parse(jsonMatch[0]) : {};\n} catch (e) {\n  analysis = { action: 'general', customer_id: '', intent: 'data' };\n}\n\nreturn [{\n  original_query: $json.chatInput,\n  action: analysis.action || 'general',\n  customer_id: analysis.customer_id || '',\n  intent: analysis.intent || 'data'\n}];"},"id":"parse-intent","name":"Parse Intent","type":"n8n-nodes-base.code","typeVersion":2,"position":[680,300],"notes":" Standard Code node"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"leftValue":"={{ $('Parse Intent').item.json.action }}","rightValue":"freshdesk","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"id":"freshdesk-route","name":"Route Freshdesk?","type":"n8n-nodes-base.if","typeVersion":2,"position":[900,200],"notes":" Standard IF node"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"leftValue":"={{ $('Parse Intent').item.json.action }}","rightValue":"intercom","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"id":"intercom-route","name":"Route Intercom?","type":"n8n-nodes-base.if","typeVersion":2,"position":[900,400],"notes":" Standard IF node"},{"parameters":{"method":"GET","url":"http://freshdesk_mcp_server:8000/api/tickets/search","sendBody":true,"specifyBody":"json","jsonBody":"{{ JSON.stringify({query: $('Parse Intent').item.json.customer_id || $('Parse Intent').item.json.original_query}) }}","options":{"allowUnauthorizedCerts":true}},"id":"freshdesk-mcp","name":"Freshdesk MCP Query","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1120,120],"notes":" Standard HTTP Request to Freshdesk MCP"},{"parameters":{"method":"GET","url":"http://intercom_mcp_server:9000/api/contacts/search","sendBody":true,"specifyBody":"json","jsonBody":"{{ JSON.stringify({query: $('Parse Intent').item.json.customer_id || $('Parse Intent').item.json.original_query}) }}","options":{"allowUnauthorizedCerts":true}},"id":"intercom-mcp","name":"Intercom MCP Query","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1120,480],"notes":" Standard HTTP Request to Intercom MCP"},{"parameters":{"jsCode":"// Format response\nconst query = $('Parse Intent').item.json.original_query;\nconst action = $('Parse Intent').item.json.action;\nconst customerId = $('Parse Intent').item.json.customer_id;\n\nlet result = {\n  query: query,\n  action: action,\n  customer_id: customerId,\n  timestamp: new Date().toISOString(),\n  status: 'processed'\n};\n\n// Add data from MCP calls if available\nif ($('Freshdesk MCP Query').item) {\n  result.freshdesk_data = $('Freshdesk MCP Query').item.json;\n}\n\nif ($('Intercom MCP Query').item) {\n  result.intercom_data = $('Intercom MCP Query').item.json;\n}\n\nreturn [result];"},"id":"format-response","name":"Format Response","type":"n8n-nodes-base.code","typeVersion":2,"position":[1340,300],"notes":" Standard Code node"},{"parameters":{"respondWith":"json","responseBody":"={{ JSON.stringify($json, null, 2) }}","options":{}},"id":"webhook-response","name":"Webhook Response","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1560,300],"notes":" Standard Respond to Webhook node"}],"connections":{"Webhook Trigger":{"main":[[{"node":"Gemini Query Analyzer","type":"main","index":0}]]},"Gemini Query Analyzer":{"main":[[{"node":"Parse Intent","type":"main","index":0}]]},"Parse Intent":{"main":[[{"node":"Route Freshdesk?","type":"main","index":0},{"node":"Route Intercom?","type":"main","index":0}]]},"Route Freshdesk?":{"main":[[{"node":"Freshdesk MCP Query","type":"main","index":0}]]},"Route Intercom?":{"main":[[{"node":"Intercom MCP Query","type":"main","index":0}]]},"Freshdesk MCP Query":{"main":[[{"node":"Format Response","type":"main","index":0}]]},"Intercom MCP Query":{"main":[[{"node":"Format Response","type":"main","index":0}]]},"Format Response":{"main":[[{"node":"Webhook Response","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":null,"triggerCount":1,"tags":[]}]