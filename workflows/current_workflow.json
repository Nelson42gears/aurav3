[{"createdAt":"2025-08-13T10:39:06.226Z","updatedAt":"2025-08-14T11:30:40.424Z","id":"Vx1G6yEFkMEpyZXH","name":"Freshdesk: AI First Draft Assistant","active":true,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"minutes"}]}},"id":"a8b1c2d3-e4f5-6789-0123-456789abcdef","name":"Every 5 minutes","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[240,304]},{"parameters":{"url":"https://42gears.freshdesk.com/api/v2/tickets","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","sendQuery":true,"queryParameters":{"parameters":[{"name":"per_page","value":"10"},{"name":"order_type","value":"desc"},{"name":"order_by","value":"created_at"},{"name":"include","value":"description"}]},"options":{}},"id":"a8b1c2d3-e4f5-6789-0123-456789abcd01","name":"Get Fresh Tickets","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,304],"credentials":{"httpBasicAuth":{"id":"YhpafogmaYiScIhf","name":"Unnamed credential"}}},{"parameters":{"assignments":{"assignments":[{"id":"ticket_id","name":"ticket_id","value":"={{ $json.id }}","type":"string"},{"id":"ticket_subject","name":"ticket_subject","value":"={{ $json.subject }}","type":"string"},{"id":"ticket_description","name":"ticket_description","value":"={{ $json.description_text || $json.description || 'No description available' }}","type":"string"},{"id":"requester_email","name":"requester_email","value":"={{ $json.requester?.email || 'unknown' }}","type":"string"},{"id":"created_at","name":"created_at","value":"={{ $json.created_at }}","type":"string"},{"id":"group_id","name":"group_id","value":"={{ $json.group_id }}","type":"number"}]},"options":{}},"id":"b8c1d2e3-f4g5-6789-0123-456789abcdef","name":"Extract Ticket Data","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[688,304],"alwaysOutputData":true},{"parameters":{"url":"https://42gears.freshdesk.com/api/v2/tickets/{{ $json.ticket_id }}","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","options":{}},"id":"ticket-detail-fetch","name":"Get Ticket Details","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[912,304],"credentials":{"httpBasicAuth":{"id":"YhpafogmaYiScIhf","name":"Unnamed credential"}}},{"parameters":{"assignments":{"assignments":[{"id":"ticket_id","name":"ticket_id","value":"={{ $json.id }}","type":"string"},{"id":"ticket_subject","name":"ticket_subject","value":"={{ $json.subject }}","type":"string"},{"id":"ticket_description","name":"ticket_description","value":"={{ $json.description_text || $json.description || 'No description available' }}","type":"string"},{"id":"requester_email","name":"requester_email","value":"={{ $json.requester?.email || 'unknown' }}","type":"string"},{"id":"created_at","name":"created_at","value":"={{ $json.created_at }}","type":"string"},{"id":"group_id","name":"group_id","value":"={{ $json.group_id }}","type":"number"}]},"options":{}},"id":"extract-full-ticket-data","name":"Extract Full Ticket Data","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1136,304],"alwaysOutputData":true},{"parameters":{"jsCode":"// Filter for Support_Group tickets (ID: 17000117990) created in last 24 hours\nconst now = new Date();\nconst oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000); // 24 hours\nconst SUPPORT_GROUP_ID = 17000117990;\n\nconst tickets = $input.all();\nconst filteredTickets = [];\n\n// Process each ticket\nfor (const item of tickets) {\n  const createdAt = new Date(item.json.created_at);\n  const groupId = item.json.group_id;\n  \n  // Filter by Support_Group AND recent creation time\n  if (groupId === SUPPORT_GROUP_ID && createdAt > oneDayAgo) { // Use oneDayAgo\n    filteredTickets.push(item);\n  }\n}\n\nif (filteredTickets.length === 0) {\n  console.log('No new Support_Group tickets found in the last 24 hours'); // Updated message\n  return [];\n}\n\nconsole.log(`Found ${filteredTickets.length} new Support_Group tickets`);\nreturn filteredTickets;"},"id":"b8c1d2e3-f4g5-6789-0123-456789abcd02","name":"Filter Support Group & New Tickets","type":"n8n-nodes-base.code","typeVersion":2,"position":[1360,304],"alwaysOutputData":true},{"parameters":{"method":"POST","url":"https://0drzjvpz3v4fzy-8000.proxy.runpod.net/v1/chat/completions","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"model\": \"Qwen/Qwen3-4B-Thinking-2507\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a senior support specialist for 42Gears. Your tone is helpful, professional, and empathetic. Analyze the user's query and draft a complete response. If possible, reference articles from our public knowledge base at knowledgebase.42gears.com. Do not ask the user for information they have already provided. Keep responses concise and actionable. Sign off as 'Best regards, The 42Gears Support Team'.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Subject: {{ $json.ticket_subject }}\\n\\nCustomer Email: {{ $json.requester_email }}\\n\\nQuery:\\n{{ $json.ticket_description }}\"\n    }\n  ],\n  \"temperature\": 0.3,\n  \"max_tokens\": 1024\n}","options":{}},"id":"c8d1e2f3-g4h5-6789-0123-456789abcdef","name":"Qwen3 LLM Request","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1584,304]},{"parameters":{"jsCode":"// Extract and clean the AI response\nconst response = $input.first();\nconst aiResponse = response.json.choices?.[0]?.message?.content || 'No response generated';\n\n// Clean up any reasoning artifacts\nlet cleanResponse = aiResponse\n  .replace(/^\\s*<\\|thinking\\|>.*?<\\/\\|thinking\\|>\\s*/s, '') // Remove thinking tags\n  .replace(/^\\s*\\*\\*Analysis\\*\\*:.*?(?=\\*\\*Response\\*\\*:|$)/s, '') // Remove analysis section\n  .replace(/^\\s*\\*\\*Response\\*\\*:\\s*/s, '') // Remove response header\n  .trim();\n\n// If still contains artifacts, try to extract clean response\nif (cleanResponse.includes('thinking') || cleanResponse.includes('Analysis')) {\n  const lines = cleanResponse.split('\\n');\n  const cleanLines = lines.filter(line => \n    !line.includes('<|thinking|>') && \n    !line.includes('</|thinking|>') &&\n    !line.toLowerCase().includes('analysis:') &&\n    line.trim().length > 0\n  );\n  cleanResponse = cleanLines.join('\\n').trim();\n}\n\nreturn {\n  json: {\n    ticket_id: $('Extract Ticket Data').item.json.ticket_id,\n    ai_draft: cleanResponse,\n    original_response: aiResponse,\n    ticket_subject: $('Extract Ticket Data').item.json.ticket_subject,\n    requester_email: $('Extract Ticket Data').item.json.requester_email,\n    ticket_description: $('Extract Ticket Data').item.json.ticket_description,\n    group_id: $('Extract Ticket Data').item.json.group_id\n  }\n};"},"id":"d8e1f2g3-h4i5-6789-0123-456789abcdef","name":"Process AI Response","type":"n8n-nodes-base.function","typeVersion":1,"position":[1808,304]},{"parameters":{"fromEmail":"Nebula 42Gears <nebula42gears@gmail.com>","toEmail":"nelson@42gears.com,nebula@42gears.com","subject":"AI Draft for Support_Group Ticket #{{ $json.ticket_id }}","options":{"appendAttribution":true,"allowUnauthorizedCerts":true}},"id":"e8f1g2h3-i4j5-6789-0123-456789abcdef","name":"Email AI Draft to Nelson","type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[2032,304],"webhookId":"5f9dfcda-e777-4187-9f9e-e8d9f1ad7c1c","retryOnFail":true,"credentials":{"smtp":{"id":"gcwCSyk87rmPgOYr","name":"SMTP account"}},"onError":"continueErrorOutput"}],"connections":{"Every 5 minutes":{"main":[[{"node":"Get Fresh Tickets","type":"main","index":0}]]},"Get Fresh Tickets":{"main":[[{"node":"Extract Ticket Data","type":"main","index":0}]]},"Extract Ticket Data":{"main":[[{"node":"Get Ticket Details","type":"main","index":0}]]},"Get Ticket Details":{"main":[[{"node":"Extract Full Ticket Data","type":"main","index":0}]]},"Extract Full Ticket Data":{"main":[[{"node":"Filter Support Group & New Tickets","type":"main","index":0}]]},"Filter Support Group & New Tickets":{"main":[[{"node":"Qwen3 LLM Request","type":"main","index":0}]]},"Qwen3 LLM Request":{"main":[[{"node":"Process AI Response","type":"main","index":0}]]},"Process AI Response":{"main":[[{"node":"Email AI Draft to Nelson","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Every 5 minutes":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f6ae590f-b0e2-4110-9321-b79eb8e989e9","triggerCount":1,"tags":[]}]